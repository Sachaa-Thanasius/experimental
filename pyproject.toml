[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "experimental"
description = "A package with some experimental code transformations activated via '__future__'-like imports."
requires-python = ">=3.10"
version = "2024.04.04"
readme = "README.md"
license = "MIT"
authors = [
    { name = "Sachaa-Thanasius", email = "111999343+Sachaa-Thanasius@users.noreply.github.com" },
]
classifiers = [
    "Development Status :: 1 - Planning",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
]

[project.urls]
Documentation = "https://github.com/Sachaa-Thanasius/experimental#readme"
Issues = "https://github.com/Sachaa-Thanasius/experimental/issues"
Source = "https://github.com/Sachaa-Thanasius/experimental"

[tool.hatch.build.targets.wheel]
packages = ["src/__experimental__"]

[tool.hatch.build.targets.wheel.hooks.autorun]
dependencies = ["hatch-autorun"]
code = """
try:
    import __experimental__
except ImportError:
    pass
else:
    __experimental__.install()
"""

# Testing-related config.

[tool.hatch.envs.test]
dependencies = ["coverage[toml]>=6.5", "pytest"]

[tool.hatch.envs.test.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = ["- coverage combine", "coverage report --skip-empty"]
cov = ["test-cov", "cov-report"]

[[tool.hatch.envs.test.matrix]]
python = ["3.10", "3.11", "3.12"]

[tool.pytest.ini_options]
pythonpath = "src"
addopts = ["--import-mode=importlib"]

[tool.coverage.paths]
__experimental__ = ["src/__experimental__"]
tests = ["tests"]

[tool.coverage.run]
source_pkgs = ["__experimental__"]
omit = ["tests/late_bound_arg_defaults/sample.py"] # Has invalid syntax.
branch = true
parallel = true

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__:", "if TYPE_CHECKING:"]

# Linting-related config.

[tool.ruff]
include = ["src/__experimental__/*"]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = [
    "F",
    "E",
    "I",
    "UP",
    "YTT",
    "ANN",
    "S",
    "BLE",
    "B",
    "A",
    "COM",
    "C4",
    "DTZ",
    "EM",
    "ISC",
    "G",
    "INP",
    "PIE",
    "T20",
    "PYI",
    "RSE",
    "RET",
    "SIM",
    "TID",
    "PTH",
    "ERA",
    "PD",
    "PL",
    "TRY",
    "NPY",
    "RUF",
]
ignore = [
    "S101", # Use of assert here is a known quantity. Blame typing memes.
    # "PLR2004", # Magic value comparison. May remove later.
    "SIM105", # Suppressable exception. contextlib.suppress is a stylistic choice with overhead.
    "C90",    # McCabe complexity memes.
    # "PD011",  # Erroneous issue that triggers for any .values attribute access at all.
    "ANN101", # Type of self is usually implicit.
    "ANN102", # Type of cls is usually implicit.
    "ANN204", # Special method return types are usually implicit or known by type checker.
    "ANN401", # Need Any for some cases.
    "A002",   # A little built-in shadowing.
    "ERA001", # Ignore commented code for now.
    # Allow messages in exception class calls.
    "TRY003",
    "EM101",
    # Recommended by Ruff when using Ruff format.
    "E111",
    "E114",
    "E117",
    "Q003",
    "COM812",
    "COM819",
    "E501",
    "ISC001",
    "ISC002",
]
unfixable = [
    "ERA", # I don't want anything erroneously detected deleted by this.
]

[tool.ruff.lint.extend-per-file-ignores]
"tests/*" = [
    "T201",    # Printing is fine.
    "ANN",     # Don't need many type annotations.
    "PLR0913", # Too many parameters.
    "PLR2004", # Magic value comparison.
    "F841",    # Unused variable.
    "F401",    # Unused import.
]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.pyright]
include = ["src/__experimental__"]
ignore = ["tests"]
pythonVersion = "3.10"
typeCheckingMode = "strict"

reportPrivateUsage = "none"
reportUnusedFunction = "none"
reportMissingTypeStubs = "warning"
reportImportCycles = "warning"
reportPropertyTypeMismatch = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
